## Parameter normalization for MCMC fitting analysis
## Generated by: H. Poole

import numpy as np

class Data_normalisation:
    """
    A class for normalizing and unnormalizing data within specified bounds, 
    with optional logarithmic scaling.

    This class provides methods to scale data to a [0, 1] range using either 
    linear or logarithmic normalization, and to reverse the normalization 
    process. Useful for preprocessing data for machine learning or analysis 
    tasks where consistent scaling is required.

    Methods
    -------
    normalise_data(original_data, lower_bound, upper_bound, log=False)
        Normalizes the input data to the [0, 1] range using linear or logarithmic scaling.

    unnormalise_data(normalised_data, lower_bound, upper_bound, log=False)
        Reverts normalized data back to its original scale using linear or logarithmic scaling.
    """

    def __init__(self):
        return

    def normalise_data(self, original_data, lower_bound, upper_bound, log=False):
        if log:
            return (np.log10(original_data)-np.log10(lower_bound))/np.log10(upper_bound/lower_bound)
        else:
            return (original_data - lower_bound)/(upper_bound-lower_bound)

    def unnormalise_data(self, normalised_data, lower_bound, upper_bound, log=False):
        if log:
            return np.power(10, (normalised_data * np.log10(upper_bound/lower_bound) + np.log10(lower_bound)))
        else:
            return normalised_data * (upper_bound - lower_bound) + lower_bound